function ObjShotStruct_Create() {
  return [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
}
function ObjShotStruct_SetX(obj, x) {
  obj[0] = x;
  return obj;
}
function ObjShotStruct_SetY(obj, y) {
  obj[1] = y;
  return obj;
}
function ObjShotStruct_SetPosition(obj, x, y) {
  obj[0] = x;
  obj[1] = y;
  return obj;
}
function ObjShotStruct_GetX(obj) {
  return obj[0];
}
function ObjShotStruct_GetY(obj) {
  return obj[1];
}
function ObjShotStruct_SetAngle(obj, angle) {
  obj[2] = angle;
  return obj;
}
function ObjShotStruct_SetAngularVelocity(obj, changeAngle) {
  obj[3] = changeAngle;
  return obj;
}
function ObjShotStruct_GetAngle(obj) {
  return obj[2];
}
function ObjShotStruct_GetAngularVelocity(obj) {
  return obj[3];
}
function ObjShotStruct_SetSpeed(obj, spd) {
  obj[4] = spd;
  return obj;
}
function ObjShotStruct_SetAcceleration(obj, changeSpd) {
  obj[5] = changeSpd;
  return obj;
}
function ObjShotStruct_GetSpeed(obj, spd) {
  return obj[4];
}
function ObjShotStruct_GetAcceleration(obj, changeSpd) {
  return obj[5];
}
function ObjShotStruct_SetWay(obj, way) {
  obj[6] = way;
  return obj;
}
function ObjShotStruct_SetStack(obj, stack) {
  obj[7] = stack;
  return obj;
}
function ObjShotStruct_GetWay(obj) {
  return obj[6];
}
function ObjShotStruct_GetStack(obj) {
  return obj[7];
}
function ObjShotStruct_SetStyle(obj, style) {
  obj[8] = style;
  return obj;
}
function ObjShotStruct_GetStyle(obj) {
  return obj[8];
}
function ObjShotStruct_SetGraphic(obj, graphic) {
  obj[9] = graphic;
  return obj;
}
function ObjShotStruct_GetGraphic(obj, graphic) {
  return obj[9];
}
function ObjShotStruct_SetDelay(obj, delay) {
  obj[10] = delay;
  return obj;
}
function ObjShotStruct_GetDelay(obj) {
  return obj[10];
}

function ObjShotStruct_Fire(obj) {
  let objList = [];
  let curObj = 0;
  let mainAngle = 0;
  let mainAngle2 = 0;
  let mainSpd = obj[4];
  let aimAngle = 0;
  let i = 0;
  let j = 0;
  if (obj[8] == 0 || obj[8] == 2 || obj[8] == 4 || obj[8] == 9 || obj[8] == 11) {
    aimAngle = atan2(GetPlayerY() - obj[1], GetPlayerX() - obj[0]);
  }
  if (obj[8] == 0 || obj[8] == 1) {
    i = 1;
    while (i <= obj[7]) {
      mainAngle = obj[3] * (obj[6] - 1) / 2;
      j = 1;
      while (j <= obj[6]) {
        curObj = CreateShotA1(
          obj[0],
          obj[1],
          mainSpd,
          mainAngle + obj[2] + aimAngle,
          obj[9],
          obj[10]
        );
        objList = objList ~ [curObj];
        mainAngle -= obj[3];
        j ++;
      }
      mainSpd += obj[5];
      i ++;
    }
  } else if (obj[8] == 2 || obj[8] == 3 || obj[8] == 4 || obj[8] == 5 || obj[8] == 6 || obj[8] == 7 || obj[8] == 8) {
    mainAngle2 = 0;
    let direction = 1;
    let tempChoose = 0;
    if (!(obj[8] != 4 && obj[8] != 5)) {
      direction = -1;
    }
    i = 1;
    while (i <= obj[6]) {
      mainAngle = obj[3] * (obj[7] - 1) / 2;
      j = 1;
      while (j <= obj[7]) {
        curObj = CreateShotA1(
          obj[0],
          obj[1],
          mainSpd,
          mainAngle + mainAngle2 + obj[2] + aimAngle,
          obj[9],
          obj[10]
        );
        objList = objList ~ [curObj];
        if (obj[8] == 7 || obj[8] == 8) {
          tempChoose = rand(0, 360);
        } else {
          tempChoose = obj[3] * direction;
        }
        mainAngle -= tempChoose;
        mainSpd += obj[5];
        j ++;
      }
      mainSpd = obj[4];
      if (obj[8] == 6 || obj[8] == 8) {
        tempChoose = rand(0, 360);
      } else {
        tempChoose = 360 / obj[6];
      }
      mainAngle2 += tempChoose;
      i ++;
    }
  } else if (obj[8] == 9 || obj[8] == 10) {
    mainAngle2 = 0;
    let flip = false;
    i = 1;
    while (i <= obj[6]) {
      mainAngle = obj[3] * (obj[7] - 1) / 2;
      j = 1;
      while (j <= obj[7]) {
        curObj = CreateShotA1(
          obj[0],
          obj[1],
          mainSpd,
          mainAngle + mainAngle2 + obj[2] + aimAngle,
          obj[9],
          obj[10]
        );
        objList = objList ~ [curObj];
        mainAngle -= (obj[3]);
        if (flip == true) {
          mainSpd -= obj[5];
          if (j % floor(obj[7] / 2) == 0) {
            flip = false;
          }
        } else {
          mainSpd += obj[5];
          if (j % floor(obj[7] / 2) == 0) {
            if (obj[7] % 2 == 0) {
              mainSpd -= obj[5];
            }
            flip = true;
          }
        }
        j ++;
      }
      mainSpd = obj[4];
      mainAngle2 += (360 / obj[6]);
      i ++;
    }
  } else if (obj[8] == 11 || obj[8] == 12) {
    j = 0;
    while (j < obj[7]) {
      i = 1;
      while (i <= round(obj[6] / 2)) {
        if (round(absolute(mainSpd) * power(10, 17)) / power(10, 17) != 0 && j != 0) {
          curObj = CreateShotA1(
            obj[0],
            obj[1],
            absolute(mainSpd) + j * obj[5],
            mainAngle + obj[2] + aimAngle,
            obj[9],
            obj[10]
          );
          objList = objList ~ [curObj];
        }
        mainAngle += 360 / obj[6];
        mainSpd -= obj[4] / (obj[6] / 4);
        i ++;
      }
      if (obj[6] % 2 != 0) {
        mainSpd = absolute(mainSpd) - obj[4] / (obj[6] / 4);
      } else {
        mainSpd = absolute(mainSpd);
      }
      i = 1;
      while (i <= round(obj[6] / 2)) {
        if (round(absolute(mainSpd) * power(10, 17)) / power(10, 17) != 0 && j != 0) {
          curObj = CreateShotA1(
            obj[0],
            obj[1],
            absolute(mainSpd) + j * obj[5],
            mainAngle + obj[2] + aimAngle,
            obj[9],
            obj[10]
          );
          objList = objList ~ [curObj];
        }
        mainAngle += 360 / obj[6];
        mainSpd -= obj[4] / (obj[6] / 4);
        i ++;
      }
      mainSpd = obj[4];
      mainAngle = 0;
      j ++;
    }
  }
  return objList;
}

//Usage example
/*
let a = ObjShotStruct_Create();
a = ObjShotStruct_SetPosition(a, ObjMove_GetX(objEnemy), ObjMove_GetY(objEnemy));
a = ObjShotStruct_SetAngle(a, 0);
a = ObjShotStruct_SetAngularVelocity(a, 3);
a = ObjShotStruct_SetSpeed(a, 3);
a = ObjShotStruct_SetAcceleration(a, 0.1);
a = ObjShotStruct_SetWay(a, 5);
a = ObjShotStruct_SetStack(a, 21);
a = ObjShotStruct_SetStyle(a, 9);
a = ObjShotStruct_SetGraphic(a, DS_RICE_S_BLUE);
a = ObjShotStruct_SetDelay(a, 60);

ObjShotStruct_Fire(a);
*/
