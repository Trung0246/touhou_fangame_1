#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Midboss spell #1"]
#Text["What? Two stages and still no lasers??"]
#System["script/main/script/system/Gui.dnh"]

#include "script/main/script/lib/Utils.dnh"
#include "script/main/script/lib/Shot.dnh"
#include "script/main/script/lib/Boss.dnh"
#include "script/main/script/lib/SFX.dnh"
#include "script/main/script/lib/Event_Const.dnh"
#include "script/main/img/bullet/shotData_Const.dnh"
#include "script/main/script/stage/2/boss/AnimJ.txt"
#include "script/main/script/lib/Spellcard.dnh"

let objBoss;
@Initialize
{
	LoadEnemyShotData("script/main/img/bullet/shotData.dnh");
	objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);
	ObjEnemy_Regist(objBoss);
	TWork;
	BossResistance(objBoss,300);
	Animation_Jiriri(objBoss);
	BossAura_Jiriri(objBoss);
	TEnd;
}

@MainLoop
{
	ObjEnemy_SetIntersectionCircleToShot(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 32);
	ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 24);
	yield;
}

@Event
{
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)
	{
		SetScriptResult(1450);
	}
	case(EV_REQUEST_TIMER)
	{
		SetScriptResult(30);
	}
}


let shotdown = false;
task TWork
{
	let diff = GetAreaCommonData("GameState","Difficulty",1);
	//That is entirely too many of these thiiiiiiings
	let diff_greydelay = [4,3,2,2][diff];
	let diff_greycount = [2,3,3,4][diff];
	let diff_greyspeed = [1.5,2,2.4,2.8][diff];
	let diff_greysplit = [20,15,12,10][diff];
	let diff_orangewaves = [4,4,6,7][diff];
	let diff_orangedelay = [10,14,16,14][diff];
	let diff_orangecount = [16,20,24,30][diff];
	let diff_laserwaves = [1,2,3,3][diff];
	let diff_lasersplit = [80,70,60,60][diff];
	ObjMove_SetDestAtWeight(objBoss,192,150,8,5);
	wait(30);
	SpellCast(11+diff);
	wait(90);
	UltraCloud;
	let shot;
	let dir = rand_sign();
	let n;
	while(!shotdown){
		ObjMove_SetDestAtFrame(objBoss,192+rand(50,120)*dir,rand(120,180),120);
		UseLasers;
		dir = -dir;
		Obj_SetValue(objBoss,"Anim",0);
		yield;
		Obj_SetValue(objBoss,"Anim",2-(dir+1)/2);
		ascent(i in 0..diff_orangewaves){
			ascent(k in 0..diff_orangedelay){
				PlaySFX(SFX_SHOT1);
				if(shotdown){break;}
				k = i*diff_greysplit*diff_orangedelay+k*diff_greysplit;
				ascent(j in 0..diff_greycount){
					SPShotA1(ObjMove_GetX(objBoss)+cos(k)*j*10,ObjMove_GetY(objBoss)+sin(k)*j*10,diff_greyspeed+j*0.2,k,RBALL_GREY,10);
				}
				wait(diff_greydelay);
			}
			if(shotdown){break;}
			n = rand(0,360);
			let s = 360/diff_orangecount;
			PlaySFX(SFX_SHOT2);
			ascent(k in 0..36){
				SPShotA2(ObjMove_GetX(objBoss),ObjMove_GetY(objBoss),0.5,k*s+n,0.015,3,RBALL_ORANGE,20);
			}
		}
		wait(150);
	}

	task UseLasers{
		wait(120);
		let d = dir;
		Obj_SetValue(objBoss,"Anim",3);
		let height = 200/diff_laserwaves;
		LaserWave(30,d);
		ascent(i in 1..diff_laserwaves){
			wait(70);
			d = -d;
			LaserWave(30+height*i,d);
		}
		Obj_SetValue(objBoss,"Anim",0);
	}

	task LaserWave(y,direc){
		let m = rand(0,48);
		descent(i in -1..10){
			if(shotdown){break;}
			shot = SPStraightLaser(i*diff_lasersplit+m,y+sin(i*22)*25,90+10*direc,512,8,35,SLASER_ORANGE,60);
			MoveLaser(shot,0.4*direc+sin(270-i*22)/2);
			LaserSound;
			wait(4);
		}

		task LaserSound{
			wait(60);
			if(!Obj_IsDeleted(objBoss)){PlaySFX(SFX_LASER);}
		}

		task MoveLaser(obj,move){
			while(!Obj_IsDeleted(obj)){
				ObjMove_SetX(obj,ObjMove_GetX(obj)+move);
				yield;
			}
		}
	}

	task UltraCloud{
		let a;
		while(!shotdown){
			a = rand(0,180);
			JiririCloud(192+cos(a)*200,sin(a)*rand(30,240),a+90+rand(-10,10),floor(rand(40,90)));
			wait(2);
		}
	}
}

task JiririCloud(x,y,angle,duration){
	let type = floor(rand(2,4));
	let cloud = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(cloud,"script/main/img/stage/2/Cloud" ~ itoa(type)  ~ ".png");
	ObjSprite2D_SetSourceRect(cloud,0,0,200,200);
	ObjSprite2D_SetDestCenter(cloud);
	ObjRender_SetColor(cloud,128,128,128);
	Obj_SetRenderPriority(cloud,0.75);
	ObjRender_SetPosition(cloud,x,y,0);
	MoveCloud;
	ascent(i in 0..33){
		if(Obj_IsDeleted(objBoss)){break;}
		ObjRender_SetAlpha(cloud,i*8);
		yield;
	}

	loop(duration){
		if(Obj_IsDeleted(objBoss)){break;}
		yield;
	}

	descent(i in 0..16){
		ObjRender_SetAlpha(cloud,i*16);
		yield;
	}
	Obj_Delete(cloud);

	task MoveCloud{
		let move = [cos(angle)/2,sin(angle)/2];
		while(!Obj_IsDeleted(cloud)){
			ObjRender_SetPosition(cloud,ObjRender_GetX(cloud)+move[0],ObjRender_GetY(cloud)+move[1],0);
			yield;
		}
	}
}

task TEnd
{
	while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0)
	{
		yield;
	}

	DramaticBossDeath(objBoss);
	shotdown = true;
	wait(60);
	//NotifyEventAll(EV_BACKGROUND_SPELLBREAK,0);
	wait(120);

	CloseScript(GetOwnScriptID());

}
