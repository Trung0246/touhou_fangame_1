task Animation_Jiriri(obj){
	let blink = false;
	BlinkTimer;
	ObjSprite2D_SetDestRect(obj,-32,-48,32,48);
	ObjPrim_SetTexture(obj,"script/main/img/enemy/boss/2/jiririsprite.png");
	while(!Obj_IsDeleted(obj)){
		while(Obj_GetValueD(obj,"Anim",0) == 0 && !Obj_IsDeleted(obj)){
			if(blink){
				blink = false;
				ObjSprite2D_SetSourceRect(obj,192,0,256,96);
				wait(6);
				ObjSprite2D_SetSourceRect(obj,128,0,192,96);
				wait(12);
			}
			ObjSprite2D_SetSourceRect(obj,64,0,128,96);
			wait(12);
			ascent(i in 0..3){
				if(Obj_GetValueD(obj,"Anim",0) != 0 || Obj_IsDeleted(obj)){break;}
				ObjSprite2D_SetSourceRect(obj,i*64,0,(i+1)*64,96);
				wait(12);
			}
		}
		if(Obj_GetValueD(obj,"Anim",0) == 1){
			ObjRender_SetScaleX(obj,-1);
			Obj_SetValue(obj,"Anim",2);
		}
		if(Obj_GetValueD(obj,"Anim",0) == 2 && !Obj_IsDeleted(obj)){
			ascent(i in 0..4){
				ObjSprite2D_SetSourceRect(obj,i*64,96,(i+1)*64,192);
				wait(6);
			}
			while(Obj_GetValueD(obj,"Anim",0) == 2 && !Obj_IsDeleted(obj)){
				yield;
			}
			descent(i in 0..3){
				ObjSprite2D_SetSourceRect(obj,i*64,96,(i+1)*64,192);
				wait(6);
			}
			ObjRender_SetScaleX(obj,1);
		}
		if(Obj_GetValueD(obj,"Anim",0) == 3 && !Obj_IsDeleted(obj)){
			ascent(i in 0..4){
				ObjSprite2D_SetSourceRect(obj,i*64,192,(i+1)*64,288);
				wait(6);
			}
			while(Obj_GetValueD(obj,"Anim",0) == 3 && !Obj_IsDeleted(obj)){yield;}
			descent(i in 0..3){
				ObjSprite2D_SetSourceRect(obj,i*64,192,(i+1)*64,288);
				wait(6);
			}
		}
	}
	

	task BlinkTimer{
		while(!Obj_IsDeleted(objBoss)){
			wait(floor(rand(240,480)));
			blink = true;
		}
	}
}

task BossAura_Jiriri(boss){
	let angle = 0;
	while(!Obj_IsDeleted(boss)){
		angle += 2;
		SpriteCircle(angle);
		yield;
		if(Obj_IsDeleted(boss)){break;}
		SpriteCircle(-angle);
		yield;
	}

	task SpriteCircle(a){
		let obj = ObjPrim_Create(OBJ_SPRITE_2D);
		ObjPrim_SetTexture(obj,"script/main/img/enemy/boss/2/jiririaura.png");
		ObjSprite2D_SetSourceRect(obj,0,0,160,152);
		ObjSprite2D_SetDestCenter(obj);
		ObjRender_SetAngleZ(obj,a);
		ObjRender_SetPosition(obj,ObjMove_GetX(boss),ObjMove_GetY(boss),0);
		ObjRender_SetBlendType(obj,BLEND_ADD_ARGB);
		Obj_SetRenderPriority(obj,0.3);
		ascent(i in 0..16){
			let scale = 0.5+i/32;
			ObjRender_SetScaleXYZ(obj,scale,scale,1);
			ObjRender_SetAlpha(obj,i*12);
			yield;
		}
		Obj_Delete(obj);
	}
}
